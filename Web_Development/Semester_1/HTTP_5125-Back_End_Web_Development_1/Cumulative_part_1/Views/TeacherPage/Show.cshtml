@{
    Layout = "_Layout";  // This tells the view to use the _Layout.cshtml file

    // Get the teacher info (either a message or JSON)
    var teacherID = ViewData["TeacherID"] as string;
    var jsonData = ViewData["TeacherInfo"];
    bool teacherNotFound = jsonData == "Teacher not found";
    bool isSearchPerformed = !string.IsNullOrEmpty(teacherID);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Teacher Search</title>
    <style>
        /* Basic styling for displaying teacher info */
        pre {
            font-family: "Courier New", monospace;
            background-color: #f4f4f4;
            padding: 10px;
            border: 1px solid #ccc;
            white-space: pre-wrap;
            word-wrap: break-word;
        }
        /* General Table Styling */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            font-family: Arial, sans-serif;
            font-size: 16px;
        }

        /* Main Table Header */
        thead tr {
            background-color: #333;
            color: #110f0f;
            text-align: left;
        }

        /* Header Cell Styling */
        thead th {
            padding: 12px;
            border-bottom: 2px solid #444;
        }

        /* Body Rows */
        tbody tr {
            background-color: #f2f2f2;
            transition: background-color 0.3s ease;
        }

        /* Alternating Row Colors */
        tbody tr:nth-child(even) {
            background-color: #e9e9e9;
        }

        /* Hover Effect */
        tbody tr:hover {
            background-color: #d1e7dd;
        }

        /* Table Cell Padding */
        td {
            padding: 12px;
            border-bottom: 1px solid #ddd;
        }

        /* Nested Table Styling */
        tbody td table {
            width: 90%;
            margin: 10px auto;
            border: 1px solid #ccc;
            background-color: #fafafa;
        }

        /* Nested Table Header */
        tbody td table thead {
            background-color: #4b8bbd;
            color: #fff;
        }

        tbody td table th {
            padding: 8px;
            border-bottom: 1px solid #ddd;
        }

        /* Nested Table Body */
        tbody td table td {
            padding: 8px;
            border-bottom: 1px solid #ddd;
        }

        /* Style for Course Title */
        tbody td h3 {
            margin-top: 10px;
            font-size: 1.2em;
            color: #333;
            text-align: center;
        }

    </style>
</head>
<body>
    <h1>Search Teacher</h1>

    <div id="teacherFormSearch">
    <!-- Form for searching teacher by ID -->
        <form method="POST">
            <label for="teacherId">Enter Teacher ID:</label>
            <input type="text" id="teacherId" name="teacherId" required>
            <button type="submit">Search</button>
        </form>
        
        <script>
            var inputField = document.getElementById("teacherId");
            var searchForm = document.getElementById("teacherFormSearch")
            
            // Add event listener to handle form submission
            searchForm.addEventListener("submit", function(event) {
                 // Set the boolean to true when the form is submitted
                const teacherIDInput = document.getElementById("teacherId").value;

                if (!/^\d+$/.test(teacherIDInput)) 
                {
                    alert("Please enter a valid numeric teacher ID");
                    event.preventDefault(); // Prevent the form from submitting and refreshing the page
                    inputField.focus();
                    
                    
                }

            });
        </script>
        
        
        <!-- Show start and end range only after the form has been submitted -->
        @if (isSearchPerformed)
        {
            <p>Searching for teachers ID: @teacherID</p>
        }
    </div>

     @if(teacherNotFound)
     {
        //<p>Teacher Not Found</p>
        <p>@jsonData</p>
     }
     else{
        @if (isSearchPerformed && !teacherNotFound)
        {
            <h2>Teacher's Info</h2>
            <div id="teacherInfo">
                <table >
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>EmployeeNumber</th>
                            <th>FirstName</th>
                            <th>LastName</th>
                            <th>HireDate</th>
                            <th>Salary</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                        
                    </tbody>
                </table>
            </div>
        }
        
      <!-- Pass the JSON data to JavaScript -->
        <script>
            // Check if jsonData is available
            var jsonData = @Html.Raw(Json.Serialize(jsonData));
            console.log(jsonData);
            
            // Do check here to test if json has no results
            
            if (jsonData) 
            {
                var teacherData = JSON.parse(jsonData);

                console.log(teacherData);
                    // Populate teacher info table

                
                console.log(teacherData.Id, teacherData.FirstName);
                var teacherTableBody = document.querySelector("#teacherInfo tbody");
                var teacherRow = document.createElement("tr");
                
                 teacherRow.innerHTML = `
                    <td>${teacherData.Id}</td>
                    <td>${teacherData.EmployeeNumber}</td>
                    <td>${teacherData.FirstName}</td>
                    <td>${teacherData.LastName}</td>
                    <td>${new Date(teacherData.HireDate).toLocaleDateString()}</td>
                    <td>${teacherData.Salary}</td>
                `;
                
                teacherTableBody.appendChild(teacherRow);
                // Check if the teacher has courses assigned
                if (teacherData.Courses && teacherData.Courses.length > 0) 
                {
                    var coureHeader = document.createElement("h3");
                    coureHeader.textContent = "Courses Assigned";
                    teacherTableBody.appendChild(coureHeader);

                    teacherData.Courses.forEach(c => {
                        console.log(c.CourseId, c.CourseName);
                        // Create a row for the courses header
                        document.createElement
                        const coursesHeaderRow = document.createElement("tr");
                        
                        coursesHeaderRow.innerHTML = `
                        <td colspan="6">
                            <table>
                                <thead>
                                    <tr>
                                        <th>CourseId</th>
                                        <th>CourseName</th>
                                        <th>CourseCode</th>
                                        <th>StartDate</th>
                                        <th>EndDate</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>${c.CourseId}</td>
                                        <td>${c.CourseName}</td>
                                        <td>${c.CourseCode}</td>
                                        <td>${c.StartDate}</td>
                                        <td>${c.EndDate}</td>
                                    </tr>
                                </tbody>
                            </table>
                        </td>
                    `;

                    teacherTableBody.appendChild(coursesHeaderRow);
                    });
                }
                else{
                     // If no courses are assigned, display a message
                    var noCoursesMessage = document.createElement("h3");
                    noCoursesMessage.textContent = "No courses assigned";
                    teacherTableBody.appendChild(noCoursesMessage);
                }
            }
        </script>
     }
</body>
</html>
